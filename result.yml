openapi: 3.0.0
info:
  title: NRNA
  description: NRNA API documentation
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: https://api.nrnaglobal.com/
    description: server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: Admin
  - name: Admin > Contact Us
  - name: Admin > Users
  - name: Admin > News
  - name: Admin > Ncc
  - name: Admin > Advice
  - name: Admin > Question
  - name: Admin > Banner
  - name: Admin > Our team
  - name: Admin > Our team > Category
  - name: Admin > Ncc Candidate
  - name: Admin > Events
  - name: Admin > Site Settings
  - name: Admin > homedata
  - name: Admin > Survey
  - name: Admin > Business Category
  - name: Admin > Business
  - name: Admin > Business Contact
  - name: Admin > Auth
  - name: Admin > News Category
  - name: Admin > Event Category
  - name: Admin > Team Contact
  - name: Admin > Business Services
  - name: Admin > News Order
  - name: Admin > BusinessOrder
  - name: Admin > Business Follower
  - name: Admin > NBNS Follower
  - name: Admin > Download Files
  - name: Admin > Email Template
  - name: Public
  - name: Public > Auth
  - name: Public > Countries
  - name: Public > Surveys
  - name: Public > Contact Us
  - name: Public > Site Settings
  - name: Public > homedata
  - name: Public > Banners
  - name: Public > News
  - name: Public > Events
  - name: Public > Our team
  - name: Public > Our team > Categories
  - name: Public > Ncc Candidate
  - name: Public > Ncc
  - name: Public > Business
  - name: Public > Business Contact
  - name: Public > Homepage
  - name: Public > Business Category
  - name: Public > Event Category
  - name: Public > News Category
  - name: Public > Team Contact
  - name: Public > Users
  - name: Public > Advice
  - name: Public > Questions
  - name: Public > Business Follower
  - name: Public > NBNS Follower
  - name: Public > Download Files
paths:
  /admin/contact-us:
    get:
      tags:
        - Admin > Contact Us
      summary: get all contact us
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: string
        - name: contactable_type
          in: query
          schema:
            type: string
          example: ncc
        - name: contactable_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/contact-us/{contact_us_id}:
    delete:
      tags:
        - Admin > Contact Us
      summary: delete contact us
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: contact_us_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/users:
    get:
      tags:
        - Admin > Users
      summary: get all users
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: page
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/users/admin:
    post:
      tags:
        - Admin > Users
      summary: create new user by admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: nitesh0hamal@gmail.com
                first_name: Nitesh
                middle_name: ''
                last_name: Hamal
                country_of_residence: Nepal
                phone: '9825915122'
                city: KTM
                approval_status: approved
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/users/{slug}/admin:
    post:
      tags:
        - Admin > Users
      summary: update by admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: hanciephago@gmail.com
                first_name: Hancie
                middle_name: Wanem
                last_name: Phago
                country_of_residence: Nepal
                phone: '1234'
                city: KTMss
                approval_status: approved
                password: abcdef
                password_confirmation: abcdef
                _method: PUT
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/users/{slug}/approval-status:
    post:
      tags:
        - Admin > Users
      summary: change approval status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                approval_status:
                  type: string
                  description: 'value: [approved, pending, rejected]'
                  example: rejected
                _method:
                  type: string
                  example: patch
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/users/{slug}/role:
    post:
      tags:
        - Admin > Users
      summary: change role
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                role_name:
                  type: string
                  description: 'value: [null, admin, ncc, member]'
                  example: ncc
                _method:
                  type: string
                  example: patch
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: ajaya-timsina
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/{slug}/status:
    post:
      tags:
        - Admin > Users
      summary: change status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'value: [0, 1]'
                  example: '1'
                _method:
                  type: string
                  example: patch
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: yogen-bahadur-chettri
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/users/{slug}/profile:
    post:
      tags:
        - Admin > Users
      summary: update profile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profile_image:
                  type: string
                  format: binary
                first_name:
                  type: string
                  example: Nitesh
                middle_name:
                  type: string
                  example: Bahadur
                last_name:
                  type: string
                  example: Hamal
                address:
                  type: string
                  example: bhwss
                phone:
                  type: integer
                  example: '12'
                facebook_url:
                  type: string
                  example: facebookss
                instagram_url:
                  type: string
                  example: in
                youtube_url:
                  type: string
                  example: youtubessss
                twitter_url:
                  type: string
                  example: |
                    twitters
                description:
                  type: string
                  example: description
                profile_banner:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: patch
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: nitesh-bahadur-hamal-1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/users/{id}:
    delete:
      tags:
        - Admin > Users
      summary: delete user
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/news:
    get:
      tags:
        - Admin > News
      summary: get all news
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: string
        - name: user_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > News
      summary: create news
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: >-
                    India-China feud keeps international planes out of Nepal
                    airport
                description:
                  type: string
                  example: >-
                    The bright orange hotel sticks out as far as the eye can see
                    - but unfortunately for its owner Bishnu Sharma, there is
                    hardly anyone there to see it.
                feature_image:
                  type: string
                  format: binary
                created_by:
                  type: integer
                  example: '1'
                newsable_type:
                  type: string
                  example: ncc
                newsable_id:
                  type: integer
                  example: '1'
                news_category_id:
                  type: integer
                  example: '3'
                excerpt:
                  type: string
                  example: >-
                    The bright orange hotel sticks out as far as the eye can see
                    - but unfortunately for its owner Bishnu Sharma, there is
                    hardly anyone there to see it.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/news/news-1:
    post:
      tags:
        - Admin > News
      summary: update news
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: News 2 edited
                description:
                  type: string
                  example: aldjawlkdj edited
                excerpt:
                  type: string
                  example: >-
                    Canadian Prime Minister Justin Trudeau has said his country
                    is serious about building closer ties with India despite an
                    ongoing diplomatic row.
                status:
                  type: integer
                  example: '1'
                feature_image:
                  type: string
                  format: binary
                created_by:
                  type: integer
                  example: '1'
                news_category_id:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: PUT
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/news/{slug}/status:
    post:
      tags:
        - Admin > News
      summary: update news status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  example: '0'
                _method:
                  type: string
                  example: patch
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: news-1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/news/{slug}:
    get:
      tags:
        - Admin > News
      summary: find by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > News
      summary: delete
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/ncc:
    get:
      tags:
        - Admin > Ncc
      summary: get all ncc
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Ncc
      summary: create ncc
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                country_name:
                  type: string
                  example: Thailand
                admin_id:
                  type: integer
                  example: '1'
                logo:
                  type: string
                  format: binary
                color:
                  type: integer
                  example: '1234'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/ncc/{slug}:
    post:
      tags:
        - Admin > Ncc
      summary: update ncc
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                country_name:
                  type: string
                  example: India
                admin_id:
                  type: integer
                  example: '42'
                logo:
                  type: string
                  format: binary
                color:
                  type: integer
                  example: '123'
                _method:
                  type: string
                  example: PUT
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Ncc
      summary: find by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: nepal
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Ncc
      summary: delete
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: nepal
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/ncc/{slug}/status:
    post:
      tags:
        - Admin > Ncc
      summary: update status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                status: 1
                _method: PATCH
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: indias
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/advices:
    get:
      tags:
        - Admin > Advice
      summary: get all advice
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/advices/{advice_id}:
    get:
      tags:
        - Admin > Advice
      summary: find by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: advice_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Advice
      summary: delete
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: advice_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/questions:
    get:
      tags:
        - Admin > Question
      summary: get all questions
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: status
          in: query
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Question
      summary: create question
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                question: What is your name?
                survey_id: '1'
                options:
                  - Bishal
                  - Ashok Chapagain
                  - Nitesh Hamal
                  - Hancie Phago
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/questions/{question_id}:
    post:
      tags:
        - Admin > Question
      summary: update question
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                question: What is your name?
                status: 0
                options:
                  - ASd
                  - Ashok Chapagain
                  - Anzila Gurung
                _method: PUT
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: question_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Question
      summary: find by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: question_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Question
      summary: delete
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: question_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/questions/{question_id}/status:
    post:
      tags:
        - Admin > Question
      summary: update status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                status: true
                _method: PATCH
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: question_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/banners:
    get:
      tags:
        - Admin > Banner
      summary: get all banners
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: bannerable_type
          in: query
          schema:
            type: string
          example: ncc
        - name: bannerable_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Banner
      summary: create banner
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Banner 1
                subtitle:
                  type: string
                  example: Banner Subtitle 1
                description:
                  type: string
                  example: aldjwalkdj
                link:
                  type: string
                  example: https://google.com
                status:
                  type: integer
                  example: '1'
                bannerable_type:
                  type: string
                bannerable_id:
                  type: string
                image:
                  type: string
                  format: binary
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/banners/{banner_id}:
    post:
      tags:
        - Admin > Banner
      summary: update banner
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Banner 1 edited
                subtitle:
                  type: string
                  example: Banner Subtitle 1 edited
                description:
                  type: string
                  example: aldjwalkdj edited
                link:
                  type: string
                  example: https://google.com edited
                status:
                  type: integer
                  example: '0'
                bannerable_type:
                  type: string
                  example: ncc
                bannerable_id:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: PUT
                image:
                  type: string
                  format: binary
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: banner_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Banner
      summary: find by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: banner_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Banner
      summary: delete
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: banner_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/banners/{banner_id}/status:
    post:
      tags:
        - Admin > Banner
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  example: '0'
                _method:
                  type: string
                  example: patch
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: banner_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/our-team-categories:
    post:
      tags:
        - Admin > Our team > Category
      summary: create our team category
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: category 1
                ncc_id: 1
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Our team > Category
      summary: get all our team categories
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ncc_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/our-team-categories/{slug}:
    post:
      tags:
        - Admin > Our team > Category
      summary: update our team category
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: category 1 edited
                ncc_id: 1
                _method: PUT
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: category-1-edited
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Our team > Category
      summary: get single our team categories
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: category-1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Our team > Category
      summary: delete our team category
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: category-1-edited
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/our-teams:
    get:
      tags:
        - Admin > Our team
      summary: get all team members
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: country
          in: query
          schema:
            type: string
          example: Nepal
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Our team
      summary: create team member
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ncc_id: 2
                member_id: 42
                designation: Supervisor
                order: 1
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/our-teams/{our_team_id}:
    post:
      tags:
        - Admin > Our team
      summary: update team member
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ncc_id: 1
                member_id: 21
                designation: Supervisor
                order: 1
                _method: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: our_team_id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Our team
      summary: find by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: our_team_id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Our team
      summary: delete
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: our_team_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/our-teams/{our_team_id}/status:
    post:
      tags:
        - Admin > Our team
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: patch
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: our_team_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/ncc-candidates:
    get:
      tags:
        - Admin > Ncc Candidate
      summary: get all ncc candidates
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ncc_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '1'
        - name: country
          in: query
          schema:
            type: string
          example: Nepal
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Ncc Candidate
      summary: create ncc candidate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ncc_id: 1
                member_id: 64
                designation: Supervisor
                order: 1
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/ncc-candidates/1:
    post:
      tags:
        - Admin > Ncc Candidate
      summary: update ncc candidate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ncc_id: 1
                member_id: 42
                designation: Supervisor
                order: 1
                _method: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/ncc-candidates/{ncc_candidate_id}:
    get:
      tags:
        - Admin > Ncc Candidate
      summary: find by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ncc_candidate_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Ncc Candidate
      summary: delete
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ncc_candidate_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/ncc-candidates/{ncc_candidate_id}/status:
    post:
      tags:
        - Admin > Ncc Candidate
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  example: '0'
                _method:
                  type: string
                  example: patch
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ncc_candidate_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/events:
    get:
      tags:
        - Admin > Events
      summary: get all events
      parameters:
        - name: pagination_limit
          in: query
          schema:
            type: string
        - name: ncc_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: search
          in: query
          schema:
            type: string
          example: Event
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Events
      summary: create event
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Program
                description:
                  type: string
                  example: my program 2
                status:
                  type: integer
                  example: '1'
                event_date:
                  type: string
                  example: '2023-12-06'
                event_time:
                  type: string
                  example: 11:06 am
                location:
                  type: string
                  example: Baneshwor
                venue:
                  type: string
                  example: Baneshword Complex
                contact_email:
                  type: string
                  example: wada@gmail.com
                contact_phone:
                  type: integer
                  example: '123123'
                map_url:
                  type: string
                  example: thpsadjwad.com
                feature_image:
                  type: string
                  format: binary
                youtube_url:
                  type: string
                  example: awldjwakl
                ncc_id:
                  type: string
                event_category_id:
                  type: integer
                  example: '3'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/events/{slug}:
    post:
      tags:
        - Admin > Events
      summary: update event
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Event 2
                description:
                  type: string
                  example: aldjawlkdj
                status:
                  type: string
                  example: inactive
                event_date:
                  type: string
                  example: '2023-05-06'
                event_time:
                  type: string
                  example: 11:06 am
                location:
                  type: string
                  example: Baneshwor
                venue:
                  type: string
                  example: Baneshword Complex
                contact_email:
                  type: string
                  example: wada@gmail.com
                contact_phone:
                  type: integer
                  example: '123123'
                map_url:
                  type: string
                  example: thpsadjwad.com
                _method:
                  type: string
                  example: PUT
                feature_image:
                  type: string
                  format: binary
                youtube_url:
                  type: string
                  example: aaaaa
                event_category_id:
                  type: integer
                  example: '1'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Events
      summary: find by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: event-1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Events
      summary: delete
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: event-1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/events/{slug}/status:
    post:
      tags:
        - Admin > Events
      summary: update event status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: active
                _method:
                  type: string
                  example: patch
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: event-1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/site-settings:
    get:
      tags:
        - Admin > Site Settings
      summary: get all site settings
      parameters:
        - name: settingable_type
          in: query
          schema:
            type: string
        - name: settingable_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Site Settings
      summary: store site settings
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                address:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                about:
                  type: string
                mission:
                  type: string
                  example: ccc
                vision:
                  type: string
                  example: bbb
                tagline_author:
                  type: string
                tagline_description:
                  type: string
                region_logo:
                  type: string
                  format: binary
                mission_image:
                  type: string
                about_image:
                  type: string
                  format: binary
                vision_image:
                  type: string
                settingable_type:
                  type: string
                  description: 'values: [ncc, nbns]'
                settingable_id:
                  type: string
                survey_title:
                  type: string
                  example: Hello
                survey_banner:
                  type: string
                  format: binary
                about_subtitle:
                  type: string
                  example: Hy
                vision_subtitle:
                  type: string
                  example: hy
                mission_subtitle:
                  type: string
                  example: hy
                about_title:
                  type: string
                  example: About Title
                vision_title:
                  type: string
                  example: Vision Title
                mission_title:
                  type: string
                  example: Mission Title
                about_banner:
                  type: string
                  format: binary
                contact_title:
                  type: string
                  example: contact
                contact_subtitle:
                  type: string
                  example: contact-sub
                contact_banner_image:
                  type: string
                  format: binary
                about_tagline:
                  type: string
                  example: hy
                about_tagline_author:
                  type: string
                  example: hy
                ncc_banner_image:
                  type: string
                  format: binary
                ncc_title:
                  type: string
                  example: hy
                ncc_description:
                  type: string
                  example: hy
                ncc_banner_title:
                  type: string
                  example: hy
                ncc_banner_subtitle:
                  type: string
                  example: hy
                advice_banner:
                  type: string
                  format: binary
                advice_title:
                  type: string
                  example: hy
                advice_subtitle:
                  type: string
                  example: hy
                support_banner:
                  type: string
                  format: binary
                support_title:
                  type: string
                  example: hh
                support_subtitle:
                  type: string
                  example: hh
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/homedata:
    get:
      tags:
        - Admin > homedata
      summary: get all
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: homedataable_type
          in: query
          schema:
            type: string
          example: business
        - name: homedataable_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > homedata
      summary: create
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: m1
                subtitle:
                  type: string
                  example: m1sb
                description:
                  type: string
                  example: aldjwalkdj
                tabtitle:
                  type: string
                  example: Mis
                status:
                  type: integer
                  example: '1'
                homedataable_type:
                  type: string
                  example: business
                homedataable_id:
                  type: integer
                  example: '1'
                image:
                  type: string
                  format: binary
                banner_image:
                  type: string
                  format: binary
                tagline:
                  type: string
                  example: hey
                tagline_author:
                  type: string
                  example: hi
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: homedataable_type
          in: query
          schema:
            type: string
        - name: homedata_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/homedata/{homedata}:
    post:
      tags:
        - Admin > homedata
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: m11s
                subtitle:
                  type: string
                  example: m1sb
                description:
                  type: string
                  example: aldjwalkdj
                tabtitle:
                  type: string
                  example: Mis
                status:
                  type: integer
                  example: '1'
                homedataable_type:
                  type: string
                homedataable_id:
                  type: string
                _method:
                  type: string
                  example: PUT
                image:
                  type: string
                  format: binary
                banner_image:
                  type: string
                  format: binary
                tagline:
                  type: string
                  example: hehe
                tagline_author:
                  type: string
                  example: gojo
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: homedata
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/homedata/{homedata_id}:
    get:
      tags:
        - Admin > homedata
      summary: find by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: homedata_id
          in: path
          schema:
            type: integer
          required: true
          example: '21'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > homedata
      summary: delete
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: homedata_id
          in: path
          schema:
            type: integer
          required: true
          example: '16'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/homedata/{homedata_id}/status:
    post:
      tags:
        - Admin > homedata
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  example: '0'
                _method:
                  type: string
                  example: patch
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: homedata_id
          in: path
          schema:
            type: integer
          required: true
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/surveys/result-by-question:
    get:
      tags:
        - Admin > Survey
      summary: survey result by questions
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/surveys/result-user-list:
    get:
      tags:
        - Admin > Survey
      summary: survey user list
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/surveys/{slug}/{user_id}/result-detail:
    get:
      tags:
        - Admin > Survey
      summary: survey answer detail of user
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: hancie
        - name: user_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/surveys/survey-participants/{slug}:
    get:
      tags:
        - Admin > Survey
      summary: survey participants list
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/surveys/:
    post:
      tags:
        - Admin > Survey
      summary: store survey
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Hancie
                description:
                  type: string
                  example: hello
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Survey
      summary: get all survey
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/surveys/hancie-1:
    post:
      tags:
        - Admin > Survey
      summary: update survey
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: nitesh
                description:
                  type: string
                  example: My name is hancie phago
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/surveys/{slug}:
    delete:
      tags:
        - Admin > Survey
      summary: delete survey
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/surveys/{slug}/status:
    post:
      tags:
        - Admin > Survey
      summary: update survey status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  example: '0'
                _method:
                  type: string
                  example: patch
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/surveys/survey-results:
    get:
      tags:
        - Admin > Survey
      summary: survey with question and result
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-categories/:
    get:
      tags:
        - Admin > Business Category
      summary: get all category
      parameters:
        - name: status
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-categories/{slug}:
    get:
      tags:
        - Admin > Business Category
      summary: get single business category
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Business Category
      summary: delete business category
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Business Category
      summary: update business category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Hancie wanem Phago
                subtitle:
                  type: string
                  example: My Subtitle
                category_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-categories:
    post:
      tags:
        - Admin > Business Category
      summary: store business category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Hancie Phago
                subtitle:
                  type: string
                  example: Phago
                category_image:
                  type: string
                  format: binary
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/businesses:
    post:
      tags:
        - Admin > Business
      summary: store business data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  example: Business 2
                email:
                  type: string
                  example: business22@gmail.com
                phone:
                  type: integer
                  example: '98345445'
                address:
                  type: string
                  example: vbv
                google_map_link:
                  type: string
                  example: vbbvb
                instagram_url:
                  type: string
                  example: vbvb
                facebook_url:
                  type: string
                  example: vbbv
                twitter_url:
                  type: string
                  example: bvbv
                description:
                  type: string
                  example: vbvb
                business_category_id:
                  type: integer
                  example: '1'
                profile_image:
                  type: string
                  format: binary
                banner_image:
                  type: string
                  format: binary
                user_id:
                  type: integer
                  example: '1'
                country:
                  type: string
                  example: Nepal
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/businesses/:
    get:
      tags:
        - Admin > Business
      summary: show all business data
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: query
          schema:
            type: integer
          example: '3'
        - name: status
          in: query
          schema:
            type: integer
          example: '1'
        - name: country
          in: query
          schema:
            type: string
          example: India
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/businesses/{slug}:
    get:
      tags:
        - Admin > Business
      summary: get single business data
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business/{slug}:
    delete:
      tags:
        - Admin > Business
      summary: delete business record
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Business
      summary: update business data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: hancie@gmail.com
                phone:
                  type: integer
                  example: '9825915122'
                address:
                  type: string
                  example: Shankamul
                google_map_link:
                  type: string
                  example: vbbvb
                instagram_url:
                  type: string
                  example: vbvb
                facebook_url:
                  type: string
                  example: vbbv
                twitter_url:
                  type: string
                  example: bvbv
                description:
                  type: string
                  example: vbvb
                business_category_id:
                  type: integer
                  example: '1'
                profile_image:
                  type: string
                  format: binary
                banner_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/businesses/{slug}/status:
    post:
      tags:
        - Admin > Business
      summary: update business status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: patch
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-contact/{id}:
    delete:
      tags:
        - Admin > Business Contact
      summary: delete business contact data
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-contact/:
    get:
      tags:
        - Admin > Business Contact
      summary: get all business contact
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/change-password:
    post:
      tags:
        - Admin > Auth
      summary: change password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                old_password:
                  type: integer
                  example: '1234'
                new_password:
                  type: string
                  example: password
                new_password_confirmation:
                  type: string
                  example: password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/logout:
    get:
      tags:
        - Admin > Auth
      summary: Logout
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/news-categories:
    post:
      tags:
        - Admin > News Category
      summary: store news category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Geography
                category_image:
                  type: string
                  format: binary
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > News Category
      summary: show all news category
      parameters:
        - name: status
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/news-categories/{slug}:
    delete:
      tags:
        - Admin > News Category
      summary: delete news category
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > News Category
      summary: update news category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Hancie
                category_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > News Category
      summary: show single news category
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/event-categories:
    post:
      tags:
        - Admin > Event Category
      summary: store event category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Hancie 2
                category_image:
                  type: string
                  format: binary
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Event Category
      summary: show all event category
      parameters:
        - name: status
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/event-categories/{slug}:
    delete:
      tags:
        - Admin > Event Category
      summary: delete event category
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Event Category
      summary: update event category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Hancie
                image_category:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Event Category
      summary: show single event category
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/team-contact/:
    get:
      tags:
        - Admin > Team Contact
      summary: show all team contact
      parameters:
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/team-contact/1:
    delete:
      tags:
        - Admin > Team Contact
      summary: delete team contact
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-services:
    post:
      tags:
        - Admin > Business Services
      summary: store business services
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Cleaning Service
                description:
                  type: string
                  example: Hello
                business_id:
                  type: integer
                  example: '1'
                service_image:
                  type: string
                  format: binary
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Business Services
      summary: get all business service
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '1'
        - name: business_id
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-services/{slug}:
    delete:
      tags:
        - Admin > Business Services
      summary: delete business service
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Business Services
      summary: get single business service
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-services/cleaning:
    post:
      tags:
        - Admin > Business Services
      summary: update business servie
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Cleaning
                description:
                  type: string
                  example: Hello2
                business_id:
                  type: integer
                  example: '1'
                service_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/news-order:
    post:
      tags:
        - Admin > News Order
      summary: create news order
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                news_id:
                  type: integer
                  example: '12'
                order_number:
                  type: integer
                  example: '1'
                news_category_id:
                  type: integer
                  example: '3'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-order:
    post:
      tags:
        - Admin > BusinessOrder
      summary: create business order
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                order_number:
                  type: integer
                  example: '2'
                business_id:
                  type: integer
                  example: '4'
                business_category_id:
                  type: string
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-follow:
    get:
      tags:
        - Admin > Business Follower
      summary: get all follower list
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/business-follow/status/{user_id}/{business_id}:
    post:
      tags:
        - Admin > Business Follower
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: active
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
        - name: business_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/nbns-followers:
    get:
      tags:
        - Admin > NBNS Follower
      summary: get all nbns follower
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/nbns-followers/status/{user_id}:
    post:
      tags:
        - Admin > NBNS Follower
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nbns_status:
                  type: string
                  example: approved
                _method:
                  type: string
                  example: patch
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/download-files:
    post:
      tags:
        - Admin > Download Files
      summary: store download files
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: download
                downloadable_type:
                  type: string
                  example: ncc
                downloadable_id:
                  type: integer
                  example: '23'
                description:
                  type: string
                  example: dfdgfg
                file:
                  type: string
                  format: binary
      parameters:
        - name: ''
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Download Files
      summary: get all download files
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '3'
        - name: status
          in: query
          schema:
            type: string
          example: active
        - name: downloadable_type
          in: query
          schema:
            type: string
          example: ncc
        - name: downloadable_id
          in: query
          schema:
            type: integer
          example: '45'
        - name: search
          in: query
          schema:
            type: string
          example: download
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/download-files/{slug}:
    get:
      tags:
        - Admin > Download Files
      summary: show single download data
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Download Files
      summary: update download file
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: download
                downloadable_type:
                  type: string
                  example: ncc
                downloadable_id:
                  type: integer
                  example: '3'
                description:
                  type: string
                  example: lorem
                file:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/download-files/download:
    delete:
      tags:
        - Admin > Download Files
      summary: delete download files
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/download-files/status/{slug}:
    post:
      tags:
        - Admin > Download Files
      summary: update download file status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: inactive
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/email-template:
    post:
      tags:
        - Admin > Email Template
      summary: create email template
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: hgh
                description:
                  type: string
                  example: ghghghgh
                business_id:
                  type: integer
                  example: '5'
                nbns:
                  type: string
                  example: nbns
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Email Template
      summary: get email list
      parameters:
        - name: email_type
          in: query
          schema:
            type: string
          example: business
        - name: user_id
          in: query
          schema:
            type: integer
          example: '42'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/email-template/{template_id}:
    post:
      tags:
        - Admin > Email Template
      summary: update email template
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: mero business
                description:
                  type: string
                  example: mero business 123
                business_id:
                  type: integer
                  example: '4'
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: template_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Email Template
      summary: delete email templates
      security:
        - bearerAuth: []
      parameters:
        - name: template_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/email-template/status/{template_id}:
    post:
      tags:
        - Admin > Email Template
      summary: update default template status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: true6
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: template_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login:
    post:
      tags:
        - Public > Auth
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: superadmin@gmail.com
                password:
                  type: string
                  example: password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/forgot-password:
    post:
      tags:
        - Public > Auth
      summary: send forgot password mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: leon.schiffer360@gmail.com
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/reset-password:
    post:
      tags:
        - Public > Auth
      summary: reset password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: tzxlYY3L
                new_password:
                  type: string
                  example: pass
                new_password_confirmation:
                  type: string
                  example: pass
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/verify-mail:
    post:
      tags:
        - Public > Auth
      summary: verify mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: tnaUdTW5
                new_password:
                  type: string
                  example: pass
                new_password_confirmation:
                  type: string
                  example: pass
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/countries:
    get:
      tags:
        - Public > Countries
      summary: get all country list
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/continents:
    get:
      tags:
        - Public > Countries
      summary: get all continent list
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/countries-code:
    get:
      tags:
        - Public > Countries
      summary: get phone list
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/surveys/answer:
    post:
      tags:
        - Public > Surveys
      summary: save answers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                survey_id: '3'
                first_name: Nitesh
                last_name: Hamal
                email: niteshhamal@gmail.com
                phone: '9825915122'
                country_of_residence: Nepal
                question_answers:
                  - question_id: 1
                    option_id: 1
                  - question_id: 2
                    option_id: 6
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/surveys/has-already-taken:
    post:
      tags:
        - Public > Surveys
      summary: check if user has already taken survey
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 21
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/surveys/checkemail:
    post:
      tags:
        - Public > Surveys
      summary: check survey email
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hanciephago555@gmail.com
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/surveys/:
    get:
      tags:
        - Public > Surveys
      summary: get all surveys list
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/surveys/nitesh:
    get:
      tags:
        - Public > Surveys
      summary: get single survey
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/contact-us:
    post:
      tags:
        - Public > Contact Us
      summary: store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                contactable_type: ncc
                contactable_id: '1'
                name: name
                email: email
                phone: phone
                subject: subject
                message: message
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/site-settings:
    get:
      tags:
        - Public > Site Settings
      summary: get all site settings
      parameters:
        - name: settingable_type
          in: query
          schema:
            type: string
          example: ncc
        - name: settingable_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/homedata:
    get:
      tags:
        - Public > homedata
      summary: list
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: homedataable_type
          in: query
          schema:
            type: string
        - name: homedataable_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/homedata/{slug}:
    get:
      tags:
        - Public > homedata
      summary: single
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/banners:
    get:
      tags:
        - Public > Banners
      summary: get all banners
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: bannerable_type
          in: query
          schema:
            type: string
          example: ncc
        - name: bannerable_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/news:
    get:
      tags:
        - Public > News
      summary: get all news
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: newsable_type
          in: query
          schema:
            type: string
          example: ncc
        - name: newsable_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: status
          in: query
          schema:
            type: integer
          example: '1'
        - name: user_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: category_id
          in: query
          schema:
            type: integer
          example: '3'
        - name: search
          in: query
          schema:
            type: string
          example: news title or description
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/news/{slug}:
    get:
      tags:
        - Public > News
      summary: find by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: news-1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/events:
    get:
      tags:
        - Public > Events
      summary: get all events
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ncc_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: status
          in: query
          schema:
            type: integer
          example: '1'
        - name: search
          in: query
          schema:
            type: string
          example: title or description
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/events/{slug}:
    get:
      tags:
        - Public > Events
      summary: find by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: event-1-3
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/our-team-categories:
    get:
      tags:
        - Public > Our team > Categories
      summary: get all our team categories
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ncc_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/our-team-categories/{slug}:
    get:
      tags:
        - Public > Our team > Categories
      summary: get single our team categories
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/our-teams:
    get:
      tags:
        - Public > Our team
      summary: get all team members
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ncc_id
          in: query
          schema:
            type: integer
          example: '2'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
        - name: category_id
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/our-teams/{our_team_id}:
    get:
      tags:
        - Public > Our team
      summary: find by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: our_team_id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/ncc-candidates:
    get:
      tags:
        - Public > Ncc Candidate
      summary: get all ncc candidates
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ncc_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/ncc-candidates/{ncc_candidate_id}:
    get:
      tags:
        - Public > Ncc Candidate
      summary: find by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ncc_candidate_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/ncc:
    get:
      tags:
        - Public > Ncc
      summary: get all ncc
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: continent
          in: query
          schema:
            type: string
          example: Asia
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
        - name: search
          in: query
          schema:
            type: string
          example: India
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/ncc/{slug}:
    get:
      tags:
        - Public > Ncc
      summary: find by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: indias
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/businesses/:
    get:
      tags:
        - Public > Business
      summary: get all business data
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: status
          in: query
          schema:
            type: integer
          example: '1'
        - name: user_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: country
          in: query
          schema:
            type: string
          example: Nepal
        - name: business_category_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
        - name: search
          in: query
          schema:
            type: string
          example: business name
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/businesses/{slug}:
    get:
      tags:
        - Public > Business
      summary: get single business data
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/business-contact:
    post:
      tags:
        - Public > Business Contact
      summary: store all contact
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: hancie@gmail.com
                subject:
                  type: string
                  example: Problem
                description:
                  type: string
                  example: Hy
                business_id:
                  type: integer
                  example: '1'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/homepage:
    get:
      tags:
        - Public > Homepage
      summary: get homepage data for app
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ncc_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/business-categories/:
    get:
      tags:
        - Public > Business Category
      summary: get all business category
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: status
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/business-categories/{slug}:
    get:
      tags:
        - Public > Business Category
      summary: get single business category
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/event-categories/:
    get:
      tags:
        - Public > Event Category
      summary: show single event category
      parameters:
        - name: status
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/event-categories/:
    get:
      tags:
        - Public > Event Category
      summary: show all event category
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: status
          in: query
          schema:
            type: integer
          example: '1'
        - name: ncc_id
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/news-categories/:
    get:
      tags:
        - Public > News Category
      summary: show all news category
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: status
          in: query
          schema:
            type: integer
          example: '1'
        - name: newsable_type
          in: query
          schema:
            type: string
          example: ncc
        - name: newsable_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/news-categories/{slug}:
    get:
      tags:
        - Public > News Category
      summary: get single news category
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: newsable_type
          in: query
          schema:
            type: string
          example: ncc
        - name: newsable_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: nitesh-hamal
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/team-contact:
    post:
      tags:
        - Public > Team Contact
      summary: store team contact
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: hancie@gmail.com
                phone:
                  type: integer
                  example: '9825915122'
                message:
                  type: string
                  example: Hy
                user_id:
                  type: integer
                  example: '1'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/{slug}:
    get:
      tags:
        - Public > Users
      summary: get single user
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users:
    post:
      tags:
        - Public > Users
      summary: create new user public
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: hanciewanephago@gmail.com
                first_name: Hancie
                middle_name: Wanem
                last_name: Limbu
                password: password
                password_confirmation: password
                country_of_residence: Nepal
                phone: '1234'
                city: KTM
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/advices:
    post:
      tags:
        - Public > Advice
      summary: create advice
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                country_of_residence:
                  type: string
                  example: Nepal
                email:
                  type: string
                  example: hancie@gmail.com
                phone:
                  type: integer
                  example: '9825915122'
                advice:
                  type: string
                  example: This is a advice
                logo:
                  type: string
                  format: binary
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/questions:
    get:
      tags:
        - Public > Questions
      summary: get all questions
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: status
          in: query
          schema:
            type: integer
          example: '1'
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/business-follow:
    post:
      tags:
        - Public > Business Follower
      summary: store follower data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: '1'
                business_id:
                  type: integer
                  example: '2'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Public > Business Follower
      summary: get business follower
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/business-follow/{user_id}/{business_id}:
    delete:
      tags:
        - Public > Business Follower
      summary: delete follower
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
        - name: business_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/business-follow/create-account:
    post:
      tags:
        - Public > Business Follower
      summary: create user account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: Hancie
                last_name:
                  type: string
                  example: Phago
                email:
                  type: string
                  example: hanciephago3@gmail.com
                country_of_residence:
                  type: string
                  example: Nepal
                business_id:
                  type: integer
                  example: '5'
                nbns:
                  type: integer
                  example: '1'
                phone:
                  type: integer
                  example: '982'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/set-user-password:
    post:
      tags:
        - Public > Business Follower
      summary: set new user password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                password_confirmation:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/follow_nbns/{user_id}:
    post:
      tags:
        - Public > NBNS Follower
      summary: follow nbns
      requestBody:
        content: {}
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/unfollow_nbns/{user_id}:
    post:
      tags:
        - Public > NBNS Follower
      summary: unfollow nbns
      requestBody:
        content: {}
      parameters:
        - name: user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/nbns-followers:
    get:
      tags:
        - Public > NBNS Follower
      summary: get all nbns followers
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/download-files:
    get:
      tags:
        - Public > Download Files
      summary: get all download files
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '3'
        - name: status
          in: query
          schema:
            type: string
          example: active
        - name: downloadable_type
          in: query
          schema:
            type: string
          example: ncc
        - name: downloadable_id
          in: query
          schema:
            type: integer
          example: '45'
        - name: search
          in: query
          schema:
            type: string
          example: download
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/download-files/{slug}:
    get:
      tags:
        - Public > Download Files
      summary: show single download file details
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
